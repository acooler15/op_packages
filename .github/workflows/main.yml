# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with: 
          fetch-depth: '0'

      - name: Git config
        run: |
          git config --global user.email "acooler15@foxmail.com"
          git config --global user.name "acooler15"

      - name: Init
        run: |
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          git checkout -b temp $(git log --pretty=format:"%h" --reverse ./README.md | head -1)

      - name: Git subtree split
        run: |
          # coolsnowwolf/lede
          cd /workdir
          git clone https://github.com/coolsnowwolf/lede.git
          cd lede
          git subtree split --prefix package/lean/automount -b automount
          # coolsnowwolf/packages
          cd /workdir
          git clone https://github.com/coolsnowwolf/packages.git cool_packages
          cd cool_packages
          git subtree split --prefix net/pdnsd-alt -b pdnsd-alt
          git subtree split --prefix net/redsocks2 -b redsocks2
          git subtree split --prefix net/dns2socks -b dns2socks
          git subtree split --prefix net/ipt2socks -b ipt2socks
          git subtree split --prefix net/microsocks -b microsocks

      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: Git subtree add
        run: |
          # add form coolsnowwolf/lede
          git subtree add --prefix=automount /workdir/lede automount
          # add form coolsnowwolf/packages
          git subtree add --prefix=pdnsd-alt /workdir/cool_packages pdnsd-alt
          git subtree add --prefix=redsocks2 /workdir/cool_packages redsocks2
          git subtree add --prefix=dns2socks /workdir/cool_packages dns2socks
          git subtree add --prefix=ipt2socks /workdir/cool_packages ipt2socks
          git subtree add --prefix=microsocks /workdir/cool_packages microsocks
          # add from packages
          # git subtree add --prefix=parted /workdir/packages parted
          # add from luci-app-jd-dailybonus master
          git subtree add --prefix=luci-app-jd-dailybonus https://github.com/jerrykuku/luci-app-jd-dailybonus master
          # add from luci-app-diskman master
          git subtree add --prefix=luci-app-diskman https://github.com/lisaac/luci-app-diskman.git master
          # add from luci-app-unblockneteasemusic
          git subtree add --prefix=luci-app-unblockneteasemusic https://github.com/cnsilvan/luci-app-unblockneteasemusic.git  master
          # add from luci-app-dockerman master
          git subtree add --prefix=luci-app-dockerman https://github.com/lisaac/luci-app-dockerman.git master
          # add from openwrt-upx master
          git subtree add --prefix=openwrt-upx https://github.com/kuoruan/openwrt-upx.git master
          
      - name: Diy
        run: |
          for patch in $(find patch -type f -name *.patch); do
            git am $patch || git am --skip;
          done

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Git push
        run: git push -f origin temp:${{ steps.extract_branch.outputs.branch }}

